{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAcC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACjCJ,EAAAc,OAAOC,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAG3D,SAASa,EAAcJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACjCJ,EAAAc,OAAOI,QAAQ,oBAAmCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,EAlD9C,CACVe,KAAMC,SAASC,MAAM,KAGnBF,KAAKG,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAMC,iBAgBR,SAA2BX,GACzB,I,IAD2BT,EAAFS,EAAET,MAAOqB,EAATZ,EAASY,KAAMC,EAAfb,EAAea,OAC/BvB,EAAW,EAAGA,EAAWuB,EAAQvB,GAAY,EACpDD,EAAcC,EAAW,EAAGC,EAAQqB,EAAOtB,GACxCwB,KAAKf,GACLgB,MAAMX,E,CAlBXY,CAGF,SAAyBC,GACvB,IAAMC,EAAO,GAOb,OANiB,IAAIC,SAASF,GAErBG,SAAQ,SAACC,EAAOC,GACvBJ,EAAKI,GAAOC,OAAOF,E,IAGdH,C,CAZMM,CAAgBd,EAAMe,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ref = {\n  form: document.forms[0],\n};\n\nref.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const data = collectFormData(event.target);\n  startLoopPromises(data);\n}\n\nfunction collectFormData(formRef) {\n  const data = {};\n  const formData = new FormData(formRef);\n\n  formData.forEach((value, key) => {\n    data[key] = Number(value);\n  });\n\n  return data;\n}\n\nfunction startLoopPromises({ delay, step, amount }) {\n  for (let position = 0; position < amount; position += 1) {\n    createPromise(position + 1, delay + step * position)\n      .then(notifySuccess)\n      .catch(notifyFailure);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction notifySuccess({ position, delay }) {\n  Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction notifyFailure({ position, delay }) {\n  Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$notifySuccess","param","Notify","success","concat","$ce04d3a99e08e73b$var$notifyFailure","failure","form","document","forms","addEventListener","event","preventDefault","step","amount","then","catch","$ce04d3a99e08e73b$var$startLoopPromises","formRef","data","FormData","forEach","value","key","Number","$ce04d3a99e08e73b$var$collectFormData","target"],"version":3,"file":"03-promises.2a0abc85.js.map"}